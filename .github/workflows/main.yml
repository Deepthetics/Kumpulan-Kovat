name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
        postgres:
            image: postgres
            env:
                POSTGRES_USER: test
                POSTGRES_PASSWORD: test
                POSTGRES_DB: test
            ports:
              - 5432/tcp
            
            options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Erase previous coverage
        run: poetry run coverage erase
      - name: Create postgresql tables
        run: psql -h localhost -U test -f schema.sql
      - name: Start flask server for testing
        run: poetry run invoke start &
        env:
            DATABASE_URL: postgres://test:test@localhost:${{ job.services.postgres.ports[5432] }}/test
      - name: Pytest
        run: poetry run coverage run --branch -m pytest -m robot
#      - name: Robot
#        run: bash run_robot_tests.sh
      - name: Combine coverage reports
        run: poetry run coverage combine
      - name: Coverage report
        run: poetry run coverage xml
      - name: Coverage report to Codecov
        run: bash <(curl -s https://codecov.io/bash)
      - name: Lint
        run: poetry run invoke lint
